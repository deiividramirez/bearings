<launch>
  <arg name="mav_name" default="bebop2" />
  <arg name="world_name" default="ground_wall" />
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false" />
  <arg name="gui" default="true" />
  <arg name="paused" default="false" />

  <arg name="verbose" default="false" />
  
  <arg name="x_1" default="-2" />
  <arg name="y_1" default="-1" />
  <arg name="z_1" default="1.7" />
  <arg name="yaw_1" default="0" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find bearings)/models" />
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find bearings)/models" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find bearings)/worlds/$(arg world_name).world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)" />
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find bearings)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)" />
      <arg name="model" value="$(find bearings)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)" />
      <arg name="x" value="$(arg x_1)" />
      <arg name="y" value="$(arg y_1)" />
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control"
      type="lee_position_controller_node" output="screen">
      <rosparam command="load"
        file="$(find bearings)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find bearings)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen"
      args="$(arg x_1) $(arg y_1) $(arg z_1) $(arg yaw_1) 1" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

</launch>